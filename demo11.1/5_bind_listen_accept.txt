头文件：
      #include <sys/types.h>
      #include <sys/socket.h>
函数：
      int bind(int sockfd, const struct sockaddr *addr, socklen_t addrlen);
功能：
      将套接字与网络信息结构体绑定
参数：
      sockfd：文件描述符，socket的返回值

      addr： 网络信息结构体  
             通用结构体（一般不用）struct sockaddr
             网络信息结构体 sockaddr_in   #include <netinet/in.h>  struct sockaddr_in

      addrlen：addr的长度

返回值：
      成功：0   失败：‐1



头文件：
      #include <sys/types.h>
      #include <sys/socket.h>
函数：
      int listen(int sockfd, int backlog);
功能：
      将套接字由主动修改为被动
      使操作系统为该套接字设置一个 "连接队列" ，用来记录所有连接到该套接字的连接
参数：
      sockfd：文件描述符，socket函数返回值

      backlog：允许同一时间通信连接的主机个数，一般设置为5、10

返回值：
      成功：0   失败：‐1



头文件：
      #include <sys/types.h>
      #include <sys/socket.h>
函数：
      int accept(int sockfd, struct sockaddr *cliaddr, socklen_t *addrlen);
功能：
      从已 "连接队列" 中取出一个已经建立的连接，如果没有任何连接可用，则进入睡眠等待(阻塞)
参数：
      sockfd： socket 监听套接字
      cliaddr: 接收到的客户端的信息结构体（自动填充，定义变量即可）
      addrlen：套接字地址结构体长度的地址

返回值：
      成功：新的文件描述符（只要有客户端连接，就会产生新的文件描述符, 这个新的文件描述符专门与指定的客户端进行通信的）
      失败：‐1
头文件：
      #include <sys/socket.h>

注意：
     返回的是一个已连接套接字，这个套接字代表 "当前这个连接"