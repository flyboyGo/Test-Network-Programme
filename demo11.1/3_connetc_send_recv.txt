头文件：
      #include <sys/types.h>
      #include <sys/socket.h>
函数：
      int connect(int sockfd, const struct sockaddr *addr, socklen_t len);
功能：
     给服务器发送客户端的连接请求
参数：
    sockfd：socket 套接字
    addr:   要连接的服务器的网络信息结构体（需要自己设置）
    len：   信息结构体长度

返回值：
    成功：0 失败：-1

注意：
    1、connect建立连接之后不会产生新的套接字
    2、连接成功后才可以开始传输TCP数据
    3、头文件：#include <sys/socket.h>



头文件：
      #include <sys/types.h>
      #include <sys/socket.h>
函数：
      ssize_t send(int sockfd, const void *buf, size_t len, int flags);
功能：发送数据
参数：
       sockfd：文件描述符
             客户端：socket函数的返回值
             服务器：accept函数的返回值

       buf：  发送的数据的地址
       len：  buf的长度
       flags：套接字标识位
             0 阻塞(常用)     MSG_DONTWAIT 非阻塞
返回值：
       成功：发送的字节数     失败：‐1

注意：
    不能用TCP协议发送 "0长度"  的数据包



头文件：
      #include <sys/types.h>
      #include <sys/socket.h>
函数：
      ssize_t recv(int sockfd, void *buf, size_t len, int flags);
功能：接收数据
参数：
     sockfd：文件描述符
          客户端：socket函数的返回值
          服务器：accept函数的返回值

     buf：  接收网络数据的缓冲区的地址
     len：  网络数据的缓冲区的大小(字节为单位)

     flags：套接字标志位
          0 阻塞    MSG_DONTWAIT 非阻塞
返回值：
      成功：接收的字节数    失败：‐1
 
注意：
   如果发送端关闭文件描述符或者关闭进程，则recv函数会返回0
